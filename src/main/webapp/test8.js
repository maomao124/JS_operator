/**
 * Project name(项目名称)：JS_operator
 * File name(文件名): test8
 * Author(作者）: mao
 * Author QQ：1296193245
 * GitHub：https://github.com/maomao124/
 * Date(创建日期)： 2022/2/28
 * Time(创建时间)： 21:32
 * Version(版本): 1.0
 * Description(描述)： 位运算符
 */


// 运算符	描述	示例
// &	按位与：如果对应的二进制位都为 1，则该二进制位为 1	5 & 1 等同于 0101 & 0001 结果为 0001，十进制结果为 1
// |	按位或：如果对应的二进制位有一个为 1，则该二进制位为 1	5 | 1 等同于 0101 | 0001 结果为 0101，十进制结果为 5
// ^	按位异或：如果对应的二进制位只有一个为 1，则该二进制位为 1	5 ^ 1 等同于 0101 ^ 0001 结果为 0100，十进制结果为 4
// ~	按位非：反转所有二进制位，即 1 转换为 0，0 转换为 1	~5 等同于 ~0101 结果为 1010，十进制结果为 -6
// <<	按位左移：将所有二进制位统一向左移动指定的位数，并在最右侧补 0	5 << 1 等同于 0101 << 1 结果为 1010，十进制结果为 10
// >>	按位右移（有符号右移）：将所有二进制位统一向右移动指定的位数，并拷贝最左侧的位来填充左侧	5 >> 1 等同于 0101 >> 1 结果为 0010，十进制结果为 2
// >>>	按位右移零（无符号右移）：将所有二进制位统一向右移动指定的位数，并在最左侧补 0	5 >>> 1 等同于 0101 >>> 1 结果为 0010，十进制结果为 2

console.log(5 << 2);  //返回值20
console.log(1000 >> 8);
console.log(-1000 >> 8);

console.log(1000 >> 8);  //返回值3

console.log(-1000 >> 8);  //返回值 -4
console.log(-1000 >>> 8);  //返回值 16777212

console.log(12 & 5);
console.log(12 | 5);
console.log(12 ^ 5);
console.log(~12);
console.log(~12 == 12 - 1);


var a = 5 & 1,
    b = 5 | 1,
    c = 5 ^ 1,
    d = ~5,
    e = 5 << 1,
    f = 5 >> 1,
    g = 5 >>> 1;
console.log(a);  // 输出：1
console.log(b);  // 输出：5
console.log(c);  // 输出：4
console.log(d);  // 输出：-6
console.log(e);  // 输出：10
console.log(f);  // 输出：2
console.log(g);  // 输出：2

alert("结果在控制台")

